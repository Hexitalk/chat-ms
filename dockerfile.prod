# Dependencias
FROM node:21-alpine3.19 as deps

WORKDIR /usr/src/app

COPY package.json ./ 
COPY package-lock.json ./

RUN npm install


# Builder
FROM node:21-alpine3.19 as build

WORKDIR /usr/src/app

ARG CHAT_MS_PORT
ARG NATS_PORT
ARG CHAT_DB_URL

ENV PORT=${CHAT_MS_PORT}
ENV NATS_SERVERS=nats://nats-server:${NATS_PORT}
ENV DATABASE_URL=${CHAT_DB_URL}

# Copy node modules
COPY --from=deps /usr/src/app/node_modules ./node_modules

# Copy all app code files
COPY . .

# RUN npm run test
RUN npm run build

RUN npm ci -f --only=production && npm cache clean --force


# Create final docker image
FROM node:21-alpine3.19 as prod

WORKDIR /usr/src/app

# Copiar las dependencias y el build
COPY --from=build /usr/src/app/node_modules ./node_modules
COPY --from=build /usr/src/app/dist ./dist

# No se sobrescriben las variables de entorno en esta etapa, se espera que las pasen al crear el contenedor
ENV NODE_ENV=production

USER node

EXPOSE 3000

CMD [ "node", "dist/main.js" ]